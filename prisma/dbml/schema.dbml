//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id Int [pk, increment]
  email String [unique, not null]
  password String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  ActivityRegistration ActivityRegistration [not null]
  Booking Booking
  Enrollment Enrollment
  Session Session [not null]
}

Table Session {
  id Int [pk, increment]
  userId Int [not null]
  token String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  User User [not null]
}

Table Event {
  id Int [pk, increment]
  title String [not null]
  backgroundImageUrl String [not null]
  logoImageUrl String [not null]
  startsAt DateTime [not null]
  endsAt DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table Enrollment {
  id Int [pk, increment]
  name String [not null]
  cpf String [not null]
  birthday DateTime [not null]
  phone String [not null]
  userId Int [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  User User [not null]
  Address Address
  Ticket Ticket
}

Table Address {
  id Int [pk, increment]
  cep String [not null]
  street String [not null]
  city String [not null]
  state String [not null]
  number String [not null]
  neighborhood String [not null]
  addressDetail String
  enrollmentId Int [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  Enrollment Enrollment [not null]
}

Table TicketType {
  id Int [pk, increment]
  name String [not null]
  price Int [not null]
  isRemote Boolean [not null]
  includesHotel Boolean [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  Ticket Ticket [not null]
}

Table Ticket {
  id Int [pk, increment]
  ticketTypeId Int [not null]
  enrollmentId Int [unique, not null]
  status TicketStatus [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  Enrollment Enrollment [not null]
  TicketType TicketType [not null]
  Payment Payment
}

Table Payment {
  id Int [pk, increment]
  ticketId Int [unique, not null]
  value Int [not null]
  cardIssuer String [not null]
  cardLastDigits String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  Ticket Ticket [not null]
}

Table Hotel {
  id Int [pk, increment]
  name String [not null]
  image String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  Rooms Room [not null]
}

Table Room {
  id Int [pk, increment]
  name String [not null]
  capacity Int [not null]
  hotelId Int [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  Hotel Hotel [not null]
  Booking Booking [not null]
}

Table Booking {
  id Int [pk, increment]
  userId Int [unique, not null]
  roomId Int [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  Room Room [not null]
  User User [not null]
}

Table Activity {
  id Int [pk, increment]
  startTime String
  endTime String
  name String
  location String
  capacity Int
  createdAt DateTime [default: `now()`]
  updatedAt DateTime [default: `now()`]
  ActivityRegistration ActivityRegistration [not null]
}

Table ActivityRegistration {
  id Int [pk, increment]
  userId Int
  activityId Int
  createdAt DateTime [default: `now()`]
  updatedAt DateTime [default: `now()`]
  Activity Activity
  User User
}

Enum TicketStatus {
  RESERVED
  PAID
}

Ref: Session.userId > User.id

Ref: Enrollment.userId - User.id

Ref: Address.enrollmentId - Enrollment.id

Ref: Ticket.enrollmentId - Enrollment.id

Ref: Ticket.ticketTypeId > TicketType.id

Ref: Payment.ticketId - Ticket.id

Ref: Room.hotelId > Hotel.id

Ref: Booking.roomId > Room.id

Ref: Booking.userId - User.id

Ref: ActivityRegistration.activityId > Activity.id [delete: No Action]

Ref: ActivityRegistration.userId > User.id [delete: No Action]